# Name of your application. Used to uniquely configure containers.
service: podwords

# Image and Container Registry Settings
image: jalessio/podwords
registry:
  server: ghcr.io
  username:
    - KAMAL_REGISTRY_USERNAME
  password:
    - KAMAL_REGISTRY_PASSWORD

builder:
  arch: amd64
  local: false
  remote: ssh://podwords1-hetzner

# Deploy to these servers.
servers:
  web:
    hosts:
      - podwords1-hetzner
    proxy:
      app_port: 3000
      # healthcheck:
      #   path: /up
      #   interval: 2
      #   timeout: 2
    env:
      secret:
        - RAILS_MASTER_KEY
        - REDIS_URL
        - MEILISEARCH_HOST
        - MEILISEARCH_API_KEY
        - AWS_REGION
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_SQS_TRANSCRIPTS_URL
        - POSTGRES_HOST
        - POSTGRES_USER
        - POSTGRES_PASSWORD

  worker:
    hosts:
      - podwords1-hetzner
      - podwords2-hetzner
      - podwords3-hetzner
      - podwords4-hetzner
    cmd: bundle exec sidekiq -q default -q within_1_day
    env:
      clear:
        RAILS_MAX_THREADS: 48
      secret:
        - RAILS_MASTER_KEY
        - REDIS_URL
        - MEILISEARCH_HOST
        - MEILISEARCH_API_KEY
        - AWS_REGION
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
        - AWS_SQS_TRANSCRIPTS_URL
        - POSTGRES_HOST
        - POSTGRES_USER
        - POSTGRES_PASSWORD

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# Set ssl: false if using something like Cloudflare to terminate SSL (but keep host!).
proxy:
  ssl: true
  host: podwords.ai

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"


# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:17.0
    host: podwords1-hetzner
    port: 5432
    cmd: -c config_file=/etc/postgresql/postgresql.conf
    env:
      secret:
        - POSTGRES_PASSWORD
    files:
      - docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    directories:
      - /mnt/HC_Volume_101272431/postgres-data:/var/lib/postgresql/data

  # mysql:
  #   image: mysql:8.4
  #   host: podwords1-hetzner
  #   port: 3306
  #   env:
  #     clear:
  #       MYSQL_ROOT_HOST: "%"
  #     secret:
  #       - MYSQL_ROOT_PASSWORD
  #   files:
  #     - docker/mysql/my.cnf:/etc/my.cnf
  #   directories:
  #     - /mnt/HC_Volume_101272431/data:/var/lib/mysql

  redis:
    host: podwords1-hetzner
    image: redis:7.0
    host: podwords1-hetzner
    port: 6379
    volumes:
      - /var/lib/redis:/data

  # podping:
  #   host: podwords1-hetzner
  #   image: ghcr.io/jalessio/podwords:podping-latest
  #   env:
  #     secret:
  #       - PODWORDS_WEB_HOST
